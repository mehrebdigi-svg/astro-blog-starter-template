---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE } from '../consts';
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`Calculator - ${SITE_TITLE}`} description="A simple calculator application" />
		<style>
			.calculator-container {
				max-width: 400px;
				margin: 2rem auto;
				padding: 2rem;
			}

			.calculator {
				background: #f5f5f5;
				border-radius: 10px;
				padding: 20px;
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			}

			.display {
				background: #fff;
				border: 2px solid #ddd;
				border-radius: 5px;
				padding: 20px;
				margin-bottom: 20px;
				font-size: 2rem;
				text-align: right;
				min-height: 60px;
				word-wrap: break-word;
				font-family: 'Courier New', monospace;
			}

			.buttons {
				display: grid;
				grid-template-columns: repeat(4, 1fr);
				gap: 10px;
			}

			button {
				padding: 20px;
				font-size: 1.2rem;
				border: none;
				border-radius: 5px;
				background: #fff;
				cursor: pointer;
				transition: all 0.2s;
				box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			}

			button:hover {
				background: #e0e0e0;
				transform: translateY(-2px);
				box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
			}

			button:active {
				transform: translateY(0);
				box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
			}

			.operator {
				background: #ff9800;
				color: white;
			}

			.operator:hover {
				background: #f57c00;
			}

			.equals {
				background: #4caf50;
				color: white;
				grid-column: span 2;
			}

			.equals:hover {
				background: #45a049;
			}

			.clear {
				background: #f44336;
				color: white;
			}

			.clear:hover {
				background: #da190b;
			}

			.zero {
				grid-column: span 2;
			}

			h1 {
				text-align: center;
				color: var(--black);
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<div class="calculator-container">
				<h1>Calculator</h1>
				<div class="calculator">
					<div class="display" id="display">0</div>
					<div class="buttons">
						<button class="clear" onclick="clearDisplay()">C</button>
						<button class="operator" onclick="appendOperator('/')">/</button>
						<button class="operator" onclick="appendOperator('*')">Ã—</button>
						<button onclick="appendNumber('7')">7</button>
						<button onclick="appendNumber('8')">8</button>
						<button onclick="appendNumber('9')">9</button>
						<button class="operator" onclick="appendOperator('-')">-</button>
						<button onclick="appendNumber('4')">4</button>
						<button onclick="appendNumber('5')">5</button>
						<button onclick="appendNumber('6')">6</button>
						<button class="operator" onclick="appendOperator('+')">+</button>
						<button onclick="appendNumber('1')">1</button>
						<button onclick="appendNumber('2')">2</button>
						<button onclick="appendNumber('3')">3</button>
						<button class="equals" onclick="calculate()">=</button>
						<button class="zero" onclick="appendNumber('0')">0</button>
						<button onclick="appendDecimal()">.</button>
					</div>
				</div>
			</div>
		</main>
		<Footer />
		
		<script is:inline>
			let currentInput = '0';
			let operator = null;
			let previousInput = null;
			let shouldResetDisplay = false;

			function updateDisplay() {
				const display = document.getElementById('display');
				if (display) {
					display.textContent = currentInput;
				}
			}

			function clearDisplay() {
				currentInput = '0';
				operator = null;
				previousInput = null;
				shouldResetDisplay = false;
				updateDisplay();
			}

			function appendNumber(num) {
				if (shouldResetDisplay) {
					currentInput = num;
					shouldResetDisplay = false;
				} else {
					currentInput = currentInput === '0' ? num : currentInput + num;
				}
				updateDisplay();
			}

			function appendDecimal() {
				if (shouldResetDisplay) {
					currentInput = '0.';
					shouldResetDisplay = false;
				} else if (!currentInput.includes('.')) {
					currentInput += '.';
				}
				updateDisplay();
			}

			function appendOperator(op) {
				if (operator !== null && previousInput !== null && !shouldResetDisplay) {
					calculate();
				}
				operator = op;
				previousInput = currentInput;
				shouldResetDisplay = true;
			}

			function calculate() {
				if (operator === null || previousInput === null) {
					return;
				}

				const prev = parseFloat(previousInput);
				const current = parseFloat(currentInput);
				let result;

				switch (operator) {
					case '+':
						result = prev + current;
						break;
					case '-':
						result = prev - current;
						break;
					case '*':
						result = prev * current;
						break;
					case '/':
						result = current !== 0 ? prev / current : 0;
						break;
					default:
						return;
				}

				currentInput = result.toString();
				operator = null;
				previousInput = null;
				shouldResetDisplay = true;
				updateDisplay();
			}

			// Initialize display
			updateDisplay();
		</script>
	</body>
</html>
